// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vk_server;

namespace Vk_server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200618203227_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Vk_server.Basket", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("ClothingId");

                    b.HasKey("UserId", "ClothingId");

                    b.HasIndex("ClothingId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Vk_server.Clothing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<long?>("ClothingSizeId");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<string>("Picture");

                    b.Property<decimal>("Price");

                    b.Property<long>("SexId");

                    b.Property<long>("ShopId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ClothingSizeId");

                    b.HasIndex("ShopId");

                    b.ToTable("Clothings");
                });

            modelBuilder.Entity("Vk_server.ClothingSize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("SizeN");

                    b.Property<string>("SizeName");

                    b.HasKey("Id");

                    b.ToTable("ClothingSizes");
                });

            modelBuilder.Entity("Vk_server.OAuthClientDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken");

                    b.Property<string>("Display");

                    b.Property<DateTime?>("ExpiresIn");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Scope");

                    b.HasKey("Id");

                    b.ToTable("OAuthClientDetails");
                });

            modelBuilder.Entity("Vk_server.PhotoHuman", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PhotoPath");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhotoHumans");
                });

            modelBuilder.Entity("Vk_server.RenderPhoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClothingId");

                    b.Property<string>("PhotoPath");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ClothingId");

                    b.HasIndex("UserId");

                    b.ToTable("RenderPhotos");
                });

            modelBuilder.Entity("Vk_server.Sex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sexs");
                });

            modelBuilder.Entity("Vk_server.Shop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Vk_server.Size", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Chest");

                    b.Property<double>("Foots");

                    b.Property<double>("Hips");

                    b.Property<double>("Legs");

                    b.Property<double>("Pelvic");

                    b.Property<double>("Shulders");

                    b.Property<double>("Waist");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Vk_server.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsSizeRight");

                    b.Property<string>("LastName");

                    b.Property<long>("OAuthClientDetailId");

                    b.Property<long>("SexId");

                    b.Property<long>("SizeId");

                    b.HasKey("Id");

                    b.HasIndex("OAuthClientDetailId");

                    b.HasIndex("SexId");

                    b.HasIndex("SizeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vk_server.Basket", b =>
                {
                    b.HasOne("Vk_server.Clothing", "Clothing")
                        .WithMany()
                        .HasForeignKey("ClothingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vk_server.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vk_server.Clothing", b =>
                {
                    b.HasOne("Vk_server.ClothingSize", "ClothingSize")
                        .WithMany()
                        .HasForeignKey("ClothingSizeId");

                    b.HasOne("Vk_server.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vk_server.PhotoHuman", b =>
                {
                    b.HasOne("Vk_server.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vk_server.RenderPhoto", b =>
                {
                    b.HasOne("Vk_server.Clothing", "Clothing")
                        .WithMany()
                        .HasForeignKey("ClothingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vk_server.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vk_server.User", b =>
                {
                    b.HasOne("Vk_server.OAuthClientDetail", "OAuthClientDetail")
                        .WithMany()
                        .HasForeignKey("OAuthClientDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vk_server.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vk_server.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
